¿
rD:\ProyectosProgramacion\VS\ProyectoMicroserviciosEquipoC\GrupoC\GrupoC.Producto\Controllers\ProductoController.cs
	namespace 	
GrupoC
 
. 
Producto 
. 
Controllers %
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
public		 

class		 
ProductoController		 #
:		$ %

Controller		& 0
{

 
private 
readonly 
IProductoRepository ,
_productoRepository- @
;@ A
public 
ProductoController !
(! "
IProductoRepository" 5
productosRepository6 I
)I J
{ 	
_productoRepository 
=  !
productosRepository" 5
;5 6
} 	
[ 	
HttpGet	 
] 
[ 	
Route	 
( 
$str 
) 
] 
public 
async 
Task 
< 
IActionResult '
>' (
GetAllAsync) 4
(4 5
)5 6
{ 	
var 
	productos 
= 
await !
_productoRepository" 5
.5 6
GetAllAsync6 A
(A B
)B C
;C D
if 
( 
	productos 
. 
Count 
>  !
$num" #
)# $
{ 
return   
Ok   
(   
	productos   #
)  # $
;  $ %
}!! 
return"" 
NotFound"" 
("" 
)"" 
;"" 
}$$ 	
[&& 	
HttpGet&&	 
]&& 
['' 	
Route''	 
('' 
$str'' 
)'' 
]'' 
public(( 
async(( 
Task(( 
<(( 
IActionResult(( '
>((' (
GetAsync(() 1
(((1 2
int((2 5
id((6 8
)((8 9
{)) 	
var** 
producto** 
=** 
await**  
_productoRepository**! 4
.**4 5
GetAsync**5 =
(**= >
id**> @
)**@ A
;**A B
if,, 
(,, 
producto,, 
==,, 
null,,  
),,  !
{-- 
return.. 
NotFound.. 
(..  
)..  !
;..! "
}// 
return11 
Ok11 
(11 
producto11 
)11 
;11  
}22 	
}]] 
}^^ Ç
kD:\ProyectosProgramacion\VS\ProyectoMicroserviciosEquipoC\GrupoC\GrupoC.Producto\DAL\IProductoRepository.cs
	namespace 	
GrupoC
 
. 
Producto 
. 
DAL 
{ 
public 

	interface 
IProductoRepository (
{ 
Task 
< 
	Productos 
> 
GetAsync  
(  !
int! $
id% '
)' (
;( )
Task 
< 
List 
< 
	Productos 
> 
> 
GetAllAsync )
() *
)* +
;+ ,
}		 
}

 í
jD:\ProyectosProgramacion\VS\ProyectoMicroserviciosEquipoC\GrupoC\GrupoC.Producto\DAL\ProductoRepository.cs
	namespace 	
GrupoC
 
. 
Producto 
. 
DAL 
{ 
public 

class 
ProductoRepository #
:$ %
IProductoRepository& 9
{ 
private		 
readonly		 
ProductosContext		 )
_context		* 2
;		2 3
public 
ProductoRepository !
(! "
ProductosContext" 2
context3 :
): ;
{ 	
_context 
= 
context 
; 
} 	
public 
async 
Task 
< 
List 
< 
	Productos (
>( )
>) *
GetAllAsync+ 6
(6 7
)7 8
{ 	
var 
	productos 
= 
await !
_context" *
.* +
	Productos+ 4
.4 5
ToListAsync5 @
(@ A
)A B
;B C
return 
	productos 
; 
} 	
public 
async 
Task 
< 
	Productos #
># $
GetAsync% -
(- .
int. 1
id2 4
)4 5
{ 	
var 
producto 
= 
await  
_context! )
.) *
	Productos* 3
.3 4
	FindAsync4 =
(= >
id> @
)@ A
;A B
return 
producto 
; 
} 	
} 
};; ’
nD:\ProyectosProgramacion\VS\ProyectoMicroserviciosEquipoC\GrupoC\GrupoC.Producto\DAL\ProductoRepositoryFake.cs
	namespace 	
GrupoC
 
. 
Producto 
. 
DAL 
{ 
public 

class "
ProductoRepositoryFake '
:' (
IProductoRepository) <
{ 
private 
readonly 
List 
< 
	Productos '
>' (
repo) -
=. /
new0 3
List4 8
<8 9
	Productos9 B
>B C
(C D
)D E
;E F
public		 "
ProductoRepositoryFake		 %
(		% &
)		& '
{

 	
for 
( 
int 
i 
= 
$num 
; 
i 
< 
$num  #
;# $
i% &
++& (
)( )
{ 
Random 
r 
= 
new 
Random %
(% &
)& '
;' (
repo 
. 
Add 
( 
new 
Models #
.# $
	Productos$ -
(- .
). /
{ 
Id 
= 
( 
i 
+ 
$num 
)  
,  !
Nombre 
= 
$" 
$str (
{( )
i) *
++ ,
$num- .
}. /
"/ 0
,0 1
Precio 
= 
( 
double $
)$ %
i% &
*' (
Math) -
.- .
PI. 0
,0 1
	FechaAlta 
= 
new  #
DateTime$ ,
(, -
$num- 1
,1 2
$num3 5
,5 6
r7 8
.8 9
Next9 =
(= >
$num> ?
,? @
$numA C
)C D
)D E
} 
) 
; 
} 
} 	
public "
ProductoRepositoryFake %
(% &
string& ,#
CreacionRepositoriVacio- D
)D E
{ 	
} 	
public 
Task 
< 
	Productos 
> 
GetAsync '
(' (
int( +
id, .
). /
{ 	
var 
product 
= 
repo 
. 
FirstOrDefault -
(- .
p. /
=>0 2
p3 4
.4 5
Id5 7
==8 :
id; =
)= >
;> ?
return 
Task 
. 

FromResult "
(" #
product# *
)* +
;+ ,
} 	
public   
Task   
<   
List   
<   
	Productos   "
>  " #
>  # $
GetAllAsync  % 0
(  0 1
)  1 2
{!! 	
return"" 
Task"" 
."" 

FromResult"" "
(""" #
repo""# '
)""' (
;""( )
}## 	
}$$ 
}%%  
hD:\ProyectosProgramacion\VS\ProyectoMicroserviciosEquipoC\GrupoC\GrupoC.Producto\DAL\ProductosContext.cs
	namespace 	
GrupoC
 
. 
Producto 
. 
DAL 
{ 
public 

class 
ProductosContext !
:" #
	DbContext$ -
{ 
public 
ProductosContext 
(  
DbContextOptions  0
<0 1
ProductosContext1 A
>A B
optionsC J
)J K
:		 
base		 
(		 
options		 
)		 
{

 	
} 	
public 
DbSet 
< 
Models 
. 
	Productos %
>% &
	Productos' 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
} 
} ¶
{D:\ProyectosProgramacion\VS\ProyectoMicroserviciosEquipoC\GrupoC\GrupoC.Producto\Migrations\20221019075811_InitialCreate.cs
	namespace 	
GrupoC
 
. 
Producto 
. 

Migrations $
{ 
public 

partial 
class 
InitialCreate &
:' (
	Migration) 2
{		 
	protected

 
override

 
void

 
Up

  "
(

" #
MigrationBuilder

# 3
migrationBuilder

4 D
)

D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str !
,! "
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
type+ /
:/ 0
$str1 6
,6 7
nullable8 @
:@ A
falseB G
)G H
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
Nombre 
= 
table "
." #
Column# )
<) *
string* 0
>0 1
(1 2
type2 6
:6 7
$str8 G
,G H
nullableI Q
:Q R
falseS X
)X Y
,Y Z
Precio 
= 
table "
." #
Column# )
<) *
double* 0
>0 1
(1 2
type2 6
:6 7
$str8 ?
,? @
nullableA I
:I J
falseK P
)P Q
,Q R
TipoProducto  
=! "
table# (
.( )
Column) /
</ 0
int0 3
>3 4
(4 5
type5 9
:9 :
$str; @
,@ A
nullableB J
:J K
falseL Q
)Q R
,R S
	FechaAlta 
= 
table  %
.% &
Column& ,
<, -
DateTime- 5
>5 6
(6 7
type7 ;
:; <
$str= H
,H I
nullableJ R
:R S
trueT X
)X Y
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 3
,3 4
x5 6
=>7 9
x: ;
.; <
Id< >
)> ?
;? @
} 
) 
; 
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 
	DropTable &
(& '
name   
:   
$str   !
)  ! "
;  " #
}!! 	
}"" 
}## •
dD:\ProyectosProgramacion\VS\ProyectoMicroserviciosEquipoC\GrupoC\GrupoC.Producto\Models\Productos.cs
	namespace 	
GrupoC
 
. 
Producto 
. 
Models  
{ 
public 

class 
	Productos 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
[		 	
Required			 
(		 
ErrorMessage		 
=		  
$str		! 9
)		9 :
]		: ;
public

 
string

 
?

 
Nombre

 
{

 
get

  #
;

# $
set

% (
;

( )
}

* +
[ 	
Required	 
( 
ErrorMessage 
=  
$str! 9
)9 :
]: ;
public 
double 
Precio 
{ 
get "
;" #
set$ '
;' (
}) *
[ 	
Required	 
( 
ErrorMessage 
=  
$str! 7
)7 8
]8 9
public 
int 
TipoProducto 
{  !
get" %
;% &
set' *
;* +
}, -
public 
DateTime 
? 
	FechaAlta "
{# $
get% (
;( )
set* -
;- .
}/ 0
} 
} ö
[D:\ProyectosProgramacion\VS\ProyectoMicroserviciosEquipoC\GrupoC\GrupoC.Producto\Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
SecretClientOptions 
options 
= 
new !
SecretClientOptions" 5
(5 6
)6 7
{ 
Retry 	
=
 
{ 
Delay 
= 
TimeSpan 
. 
FromSeconds #
(# $
$num$ %
)% &
,& '
MaxDelay 
= 
TimeSpan 
. 
FromSeconds '
(' (
$num( *
)* +
,+ ,

MaxRetries 
= 
$num 
, 
Mode 
= 
	RetryMode 
. 
Exponential $
} 
} 
; 
var 
client 

= 
new 
SecretClient 
( 
new !
Uri" %
(% &
$str& M
)M N
,N O
newP S"
DefaultAzureCredentialT j
(j k
)k l
,l m
optionsn u
)u v
;v w
KeyVaultSecret 
secret 
= 
client 
. 
	GetSecret (
(( )
$str) D
)D E
;E F
string 
secretValue 
= 
secret 
. 
Value !
;! "
builder 
. 
Services 
. 
AddControllers 
(  
)  !
;! "
builder!! 
.!! 
Services!! 
.!! #
AddEndpointsApiExplorer!! (
(!!( )
)!!) *
;!!* +
builder"" 
."" 
Services"" 
."" 
AddSwaggerGen"" 
("" 
)""  
;""  !
builder## 
.## 
Services## 
.## 
	AddScoped## 
<## 
IProductoRepository## .
,##. /
ProductoRepository##0 B
>##B C
(##C D
)##D E
;##E F
builder$$ 
.$$ 
Services$$ 
.$$ 
AddDbContext$$ 
<$$ 
ProductosContext$$ .
>$$. /
($$/ 0
options$$0 7
=>$$8 :
options%% 
.%% 
UseSqlServer%% (
(%%( )
secretValue%%) 4
)%%4 5
)&& 
;&& 
var(( 
app(( 
=(( 	
builder((
 
.(( 
Build(( 
((( 
)(( 
;(( 
if++ 
(++ 
app++ 
.++ 
Environment++ 
.++ 
IsDevelopment++ !
(++! "
)++" #
)++# $
{,, 
app-- 
.-- 

UseSwagger-- 
(-- 
)-- 
;-- 
app.. 
... 
UseSwaggerUI.. 
(.. 
).. 
;.. 
}// 
app22 
.22 
UseAuthorization22 
(22 
)22 
;22 
app44 
.44 
MapControllers44 
(44 
)44 
;44 
app66 
.66 
Run66 
(66 
)66 	
;66	 
